"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Iterable, List, Union, overload
from .sequence import Sequence
from .transform import T

"""
This type stub file was generated by pyright.
"""

class ListLike(List[T], Sequence[T]):
    def __init__(self, iterable: Iterable[T] = ...) -> None: ...
    @overload
    def count(self) -> int: ...
    @overload
    def count(self, predicate: Callable[[T], bool]) -> int: ...
    @overload
    def count(self, predicate: Callable[[T, int], bool]) -> int: ...
    @overload
    def count(self, predicate: Callable[[T, int, Sequence[T]], bool]) -> int: ...
    def count(self, predicate: Union[Callable[..., bool], Any, None] = ...) -> int:
        """
        Returns the number of elements in the Sequence that satisfy the specified [predicate] function.

        Example 1:
        >>> lst = [1, 2, 3]
        >>> it(lst).count()
        3
        >>> it(lst).count(lambda x: x > 0)
        3
        >>> it(lst).count(lambda x: x > 2)
        1
        """
        ...
